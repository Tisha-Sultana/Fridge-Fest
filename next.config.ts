import type {NextConfig} from 'next';

const nextConfig: NextConfig = {
  /* config options here */
  typescript: {
    ignoreBuildErrors: true,
  },
  eslint: {
    ignoreDuringBuilds: true,
  },
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 'picsum.photos',
        port: '',
        pathname: '/**',
      },
    ],
    // Allow base64 data URLs for images generated by AI
    dangerouslyAllowSVG: true, 
    contentSecurityPolicy: "default-src 'self'; script-src 'none'; sandbox;",
    imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
    deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
    domains: ['picsum.photos'], // Keep existing domains if any
    // Add 'data:' to acceptable protocols for image src
    // This is not directly a protocol in remotePatterns, but is implicitly allowed by Next/Image
    // for base64 src. If issues arise, further config might be needed or NextJs version might impact this.
    // For now, relying on Next/Image's default capability to handle data URIs.
    // If specific `loader` or `loaderFile` is used, that would be configured here.
    // The `remotePatterns` is for external URLs. Data URIs are handled differently.
    // Ensuring Next/Image can process data URIs often means just providing them as `src`.
  },
};

export default nextConfig;
